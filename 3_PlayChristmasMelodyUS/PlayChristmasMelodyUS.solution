/*
 * Lesson playing Christmas melody if US Sensor value is a defined range.
 *
 * Thema:
 * - Ultraschall Abstandssensor einlesen.
 * - Eine Library benutzen, um Weichnachstlieder abzuspielen.
 *
 *  Copyright 2019 Armin Joachimsmeyer
 *  This code is released under GPLv3 license.
 *
 *  This file is part of Arduino-Lessons-for-School https://github.com/ArminJo/Arduino-Lessons-for-School.
 *
 *  Arduino-Lessons-for-School is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 */

/*
 * WICHTIGE TASTENKOMBINATIONEN
 * Formatieren: "strg" + "F"
 * Definition finden: "F3"
 * Autocompletion: "strg" + Leertaste
 * Verwendung suchen: "strg" + "G"
 *
 */

#include <Arduino.h>
#include "Breadboard.h"

#include "HCSR04.h"
#include "BlinkLed.h"
#include <PlayRtttl.h>

#define VERSION_EXAMPLE "1.0"

/*
 * The range for the melody to start
 */
#define MINIMUM_DISTANCE_CENTIMETER 40
#define MAXIMUM_DISTANCE_CENTIMETER 120

BlinkLed RedLed(PIN_RED_LED);
BlinkLed YellowLed(PIN_YELLOW_LED);
BlinkLed GreenLed(PIN_GREEN_LED);

void playRandomSongAndBlink();

//The setup function is called once at startup of the sketch
void setup() {
	// Start serial output
	Serial.begin(115200);
	// Just to know which program is running on my Arduino
	Serial.println(F("START " __FILE__ "\r\nVersion " VERSION_EXAMPLE " from " __DATE__));

	initBreadboardPins();
	initUSDistancePins(PIN_TRIGGER_OUT, PIN_ECHO_IN);

	randomSeed(getUSDistance());
	delay(500); // to avoid sound directly at power up

	/*
	 * Play first song
	 */
	playRandomSongAndBlink();
	RedLed.off(); // switch it manually off here
}

/*
 * Aufgabe: 1. Verändere die Bedingung so, dass die Melodie nur dann abgespielt wird, wenn die Entfernung zwischen 2 Werten liegt.
 * 					Zwei Bedingungen werden mit && "UND" verknüpft.
 * 			2. Benutze die random() Funktion um ein zufälliges Lied abzuspielen.
 * 			3. Warte solange bis eine Messung ausserhalb der obigen 2 Werte liegt, um zu vermeiden, dass andauernd Melodien gespielt werden.
 */
void loop() {
	static uint8_t sInRangeCounter = 0;

	unsigned int tCentimeter = getUSDistanceAsCentiMeter();
	Serial.print("Distance=");
	Serial.print(tCentimeter);
    Serial.println("cm.");

	if (tCentimeter > MINIMUM_DISTANCE_CENTIMETER && tCentimeter < MAXIMUM_DISTANCE_CENTIMETER) {
		sInRangeCounter++;
		if (sInRangeCounter >= 3) {
			/*
			 * Now an object is for a longer time in the right range.
			 * Play one song and wait for the object to leave the range
			 * As long as the object is in range, the red LED is active
			 */
			playRandomSongAndBlink();
			sInRangeCounter = 0;

			// wait for distance to be out of range for 4 consecutive readings
			uint8_t tCounter = 0;
			tCentimeter = getUSDistanceAsCentiMeter();
			while (tCounter < 4) {
				Serial.print("Distance=");
				Serial.print(tCentimeter);
			    Serial.print("cm.");

				if (tCentimeter < MINIMUM_DISTANCE_CENTIMETER || tCentimeter > MAXIMUM_DISTANCE_CENTIMETER) {
					tCounter++;
				} else {
					tCounter = 0; // reset to start condition
					Serial.print(" Still in range.");
				}
				Serial.print(" Wait for ");
				Serial.print(4 - tCounter);
				Serial.println(" distances out of range.");

				delay(1000);
			}
		}
	} else {
		sInRangeCounter = 0;
	}

	RedLed.off();
	delay(200);
}

/*
 * Leaves red LED on
 */
void playRandomSongAndBlink() {
	char StringBuffer[16];
	Serial.println();
	Serial.print("Now playing: ");
	startPlayRandomRtttlFromArrayPGM(PIN_SPEAKER, RTTTLChristmasMelodies, ARRAY_SIZE_CHRISTMAS_MELODIES, StringBuffer,
			sizeof(StringBuffer));
	Serial.println(StringBuffer);

	/*
	 * Start LEDs blinking
	 */
	RedLed.startWithOnOffTime(300, 600);
	YellowLed.startWithOnOffTime(800, 400);
	GreenLed.startWithOnOffTime(1000, 1500);

// wait for the song to end
	while (updatePlayRtttl()) {
		RedLed.update();
		YellowLed.update();
		GreenLed.update();
		delay(1);
	}
	// switch off only 2 LEDs, the red one will be on until the "object in the right distance" is gone
	YellowLed.off();
	GreenLed.off();
	RedLed.on();
	delay(2000);
}
